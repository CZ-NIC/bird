variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C
  GIT_STRATEGY: fetch
  DOCKER_CMD: docker --config="$HOME/.docker/$CI_JOB_ID/"
  IMG_BASE: registry.labs.nic.cz/labs/bird
  TOOLS_DIR: /var/lib/gitlab-runner/bird-tools

stages:
  - image
  - build
  - test

.docker: &docker_build
  stage: image
  allow_failure: true
  script:
  - $DOCKER_CMD login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.labs.nic.cz
  # Make sure we refresh the base image if it updates (eg. security updates, etc)
  # If we do just the build, cache is always reused and the freshness of the
  # base image is never checked. However, pull always asks and updates the
  # image only if it changed â€’ therefore, the cache is used unless there's a
  # change.
  - $DOCKER_CMD pull `sed -ne 's/^FROM //p' "misc/docker/$IMG_NAME/Dockerfile"`
  - $DOCKER_CMD build -t "bird:$IMG_NAME" "misc/docker/$IMG_NAME"
  - $DOCKER_CMD tag "bird:$IMG_NAME" "$IMG_BASE:$IMG_NAME"
  - $DOCKER_CMD push "$IMG_BASE:$IMG_NAME"
  after_script:
  - rm -f "$HOME/.docker/$CI_JOB_ID/" # cleanup the credentials
  tags:
  # That's Docker in Docker
  - dind

docker_debian-7-amd64:
  variables:
    IMG_NAME: "debian-7-amd64"
  <<: *docker_build

docker_debian-7-i386:
  variables:
    IMG_NAME: "debian-7-i386"
  <<: *docker_build

docker_debian-8-amd64:
  variables:
    IMG_NAME: "debian-8-amd64"
  <<: *docker_build

docker_debian-8-i386:
  variables:
    IMG_NAME: "debian-8-i386"
  <<: *docker_build

docker_debian-9-amd64:
  variables:
    IMG_NAME: "debian-9-amd64"
  <<: *docker_build

docker_debian-9-i386:
  variables:
    IMG_NAME: "debian-9-i386"
  <<: *docker_build

docker_debian-10-amd64:
  variables:
    IMG_NAME: "debian-10-amd64"
  <<: *docker_build

docker_debian-10-i386:
  variables:
    IMG_NAME: "debian-10-i386"
  <<: *docker_build

docker_debian-testing-amd64:
  variables:
    IMG_NAME: "debian-testing-amd64"
  <<: *docker_build

docker_debian-testing-i386:
  variables:
    IMG_NAME: "debian-testing-i386"
  <<: *docker_build

docker_fedora-25-amd64:
  variables:
    IMG_NAME: "fedora-25-amd64"
  <<: *docker_build

docker_fedora-26-amd64:
  variables:
    IMG_NAME: "fedora-26-amd64"
  <<: *docker_build

docker_fedora-27-amd64:
  variables:
    IMG_NAME: "fedora-27-amd64"
  <<: *docker_build

docker_fedora-28-amd64:
  variables:
    IMG_NAME: "fedora-28-amd64"
  <<: *docker_build

docker_fedora-29-amd64:
  variables:
    IMG_NAME: "fedora-29-amd64"
  <<: *docker_build

docker_fedora-30-amd64:
  variables:
    IMG_NAME: "fedora-30-amd64"
  <<: *docker_build

docker_fedora-31-amd64:
  variables:
    IMG_NAME: "fedora-31-amd64"
  <<: *docker_build

docker_centos-7-amd64:
  variables:
    IMG_NAME: "centos-7-amd64"
  <<: *docker_build

docker_centos-8-amd64:
  variables:
    IMG_NAME: "centos-8-amd64"
  <<: *docker_build

docker_ubuntu-14_04-amd64:
  variables:
    IMG_NAME: "ubuntu-14.04-amd64"
  <<: *docker_build
 
docker_ubuntu-16_04-amd64:
  variables:
    IMG_NAME: "ubuntu-16.04-amd64"
  <<: *docker_build
 
docker_ubuntu-18_04-amd64:
  variables:
    IMG_NAME: "ubuntu-18.04-amd64"
  <<: *docker_build
 
docker_ubuntu-19_10-amd64:
  variables:
    IMG_NAME: "ubuntu-19.10-amd64"
  <<: *docker_build

docker_opensuse-15.0-amd64:
  variables:
    IMG_NAME: "opensuse-15.0-amd64"
  <<: *docker_build

docker_opensuse-15.1-amd64:
  variables:
    IMG_NAME: "opensuse-15.1-amd64"
  <<: *docker_build

# TODO We want to copy these BSDs to our own virtual machines, to make sure
# someone doesn't update them by accident.
.freebsd-11-i386: &freebsd-11-i386_env
  tags:
  - freebsd
  - i386
  #only:
  #- master
  #- triggers
  #- tags

.freebsd-11-amd64: &freebsd-11-amd64_env
  tags:
  - freebsd
  - amd64

.build: &build-base
  stage: build
  script:
  - autoreconf
  - ./configure CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS"
  # Detect which make is available
  - MAKE=make
  - which gmake 2>/dev/null >/dev/null && MAKE=gmake
  - $MAKE
  # Run tests if they are available
  - $MAKE check

.build-linux: &build-linux
  <<: *build-base
  tags:
    - docker
    - linux
    - amd64

build-debian-7-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-7-amd64

build-debian-7-i386:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-7-i386

build-debian-8-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-8-amd64

build-debian-8-i386:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-8-i386

build-debian-9-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-9-amd64

build-debian-9-i386:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-9-i386

build-debian-10-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-10-amd64

build-debian-10-i386:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-10-i386

build-debian-testing-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-testing-amd64

build-debian-testing-i386:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:debian-testing-i386

build-fedora-25-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-25-amd64

build-fedora-26-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-26-amd64

build-fedora-27-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-27-amd64

build-fedora-28-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-28-amd64

build-fedora-29-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-29-amd64

build-fedora-30-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-30-amd64

build-fedora-31-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:fedora-31-amd64

build-centos-7-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:centos-7-amd64

build-centos-8-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:centos-8-amd64

build-ubuntu-14_04-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:ubuntu-14.04-amd64

build-ubuntu-16_04-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:ubuntu-16.04-amd64

build-ubuntu-18_04-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:ubuntu-18.04-amd64

build-ubuntu-19_04-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:ubuntu-19.04-amd64

build-opensuse-15.0-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:opensuse-15.0-amd64

build-opensuse-15.1-amd64:
  <<: *build-linux
  image: registry.labs.nic.cz/labs/bird:opensuse-15.1-amd64

build-freebsd-11-amd64:
  <<: *build-base
  tags:
    - freebsd
    - amd64

build-freebsd-11-i386:
  <<: *build-base
  tags:
    - freebsd
    - i386

build-birdlab:
  stage: build
  tags:
    - birdlab
    - amd64
  script:
    - DIR=$(pwd)
    - autoreconf
    - ./configure
    - make
    - cd $TOOLS_DIR
    - sudo git clean -fx
    - git pull --ff-only
    - mv $DIR/bird $DIR/birdc netlab/common

.test: &test-base
  stage: test
  needs: [build-birdlab]
  tags:
    - birdlab
    - amd64
  script:
    - cd $TOOLS_DIR/netlab
    - sudo ./stop
    - sudo ./runtest -m check $TEST_NAME

test-ospf-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-base

test-ospf-default:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-default

test-ospf-priority:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-priority

test-ospf-nbma:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-nbma

test-ospf-ptmp:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-ptmp

test-ospf-authentication:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-authentication

test-ospf-bfd:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-bfd

test-ospf-custom:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-custom

test-ospf-vrf:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-vrf

test-bgp-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-base

test-bgp-auth:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-auth

test-bgp-int:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-int

test-bgp-merged:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-merged

test-ebgp-loop:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-loop

test-ebgp-star:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-star

test-ibgp-loop:
  <<: *test-base
  variables:
    TEST_NAME: cf-ibgp-loop

test-ibgp-star:
  <<: *test-base
  variables:
    TEST_NAME: cf-ibgp-flat
