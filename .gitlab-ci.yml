## TODO: find out how to generate this file by another yaml file.
## Gitlab can do it but it is a stupid idea to mess with this
## when releasing 4 versions at once. See ya later!
##                                              -- Maria, April 2025

variables:
  DEBIAN_FRONTEND: noninteractive
  LC_ALL: C.UTF-8
  GIT_STRATEGY: fetch
  DOCKER_CMD: docker --config="$HOME/.docker/$CI_JOB_ID/"
  IMG_BASE: registry.nic.cz/labs/bird
  TOOLS_DIR: /home/gitlab-runner/bird-tools
  STAYRTR_BINARY: /usr/bin/stayrtr

stages:
  - image
  - build
  - pkg
  - test
  - release

## Docker Image Rules
#
# We are running all the build / packaging tests in Dockers (unless otherwise)
# and these are rules to build these docker images. These are expensive to run
# and should run only if needed.

.docker: &docker_build
  stage: image
  script:
  - $DOCKER_CMD login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.nic.cz
  # Make sure we refresh the base image if it updates (eg. security updates, etc)
  # If we do just the build, cache is always reused and the freshness of the
  # base image is never checked. However, pull always asks and updates the
  # image only if it changed â€’ therefore, the cache is used unless there's a
  # change.
  - $DOCKER_CMD pull `sed -ne 's/^FROM //p' "misc/docker/$IMG_NAME/Dockerfile"`
  - $DOCKER_CMD build -t "bird:$IMG_NAME" "misc/docker/$IMG_NAME"
  - $DOCKER_CMD tag "bird:$IMG_NAME" "$IMG_BASE:$IMG_NAME"
  - $DOCKER_CMD push "$IMG_BASE:$IMG_NAME"
  after_script:
  - rm -f "$HOME/.docker/$CI_JOB_ID/" # cleanup the credentials
  tags:
  # That's Docker in Docker
  - dind
  rules:
  - if: '$CI_COMMIT_TAG'
    # Never rebuild for tags
    when: never
  - changes:
    # Do any change in Dockerfile (e.g. change a comment) to rebuild the image
    - misc/docker/$IMG_NAME/Dockerfile
    when: always
  - when: never

docker-docbuilder:
  variables:
    IMG_NAME: "docbuilder"
  <<: *docker_build

docker-centos-7-amd64:
  variables:
    IMG_NAME: "centos-7-amd64"
  <<: *docker_build

docker-centos-8-amd64:
  variables:
    IMG_NAME: "centos-8-amd64"
  <<: *docker_build

docker-debian-10-amd64:
  variables:
    IMG_NAME: "debian-10-amd64"
  <<: *docker_build

docker-debian-10-i386:
  variables:
    IMG_NAME: "debian-10-i386"
  <<: *docker_build

docker-debian-11-amd64:
  variables:
    IMG_NAME: "debian-11-amd64"
  <<: *docker_build

docker-debian-11-i386:
  variables:
    IMG_NAME: "debian-11-i386"
  <<: *docker_build

docker-debian-12-amd64:
  variables:
    IMG_NAME: "debian-12-amd64"
  <<: *docker_build

docker-debian-12-i386:
  variables:
    IMG_NAME: "debian-12-i386"
  <<: *docker_build

docker-debian-testing-amd64:
  variables:
    IMG_NAME: "debian-testing-amd64"
  <<: *docker_build

docker-debian-testing-i386:
  variables:
    IMG_NAME: "debian-testing-i386"
  <<: *docker_build

docker-fedora-32-amd64:
  variables:
    IMG_NAME: "fedora-32-amd64"
  <<: *docker_build

docker-fedora-33-amd64:
  variables:
    IMG_NAME: "fedora-33-amd64"
  <<: *docker_build

docker-fedora-34-amd64:
  variables:
    IMG_NAME: "fedora-34-amd64"
  <<: *docker_build

docker-fedora-35-amd64:
  variables:
    IMG_NAME: "fedora-35-amd64"
  <<: *docker_build

docker-fedora-36-amd64:
  variables:
    IMG_NAME: "fedora-36-amd64"
  <<: *docker_build

docker-fedora-37-amd64:
  variables:
    IMG_NAME: "fedora-37-amd64"
  <<: *docker_build

docker-fedora-38-amd64:
  variables:
    IMG_NAME: "fedora-38-amd64"
  <<: *docker_build

docker-fedora-39-amd64:
  variables:
    IMG_NAME: "fedora-39-amd64"
  <<: *docker_build

docker-fedora-40-amd64:
  variables:
    IMG_NAME: "fedora-40-amd64"
  <<: *docker_build

docker-fedora-41-amd64:
  variables:
    IMG_NAME: "fedora-41-amd64"
  <<: *docker_build

#planned release 4/2025
# docker-fedora-42-amd64:
#   variables:
#     IMG_NAME: "fedora-42-amd64"
#   <<: *docker_build

docker-opensuse-15.0-amd64:
  variables:
    IMG_NAME: "opensuse-15.0-amd64"
  <<: *docker_build

docker-opensuse-15.1-amd64:
  variables:
    IMG_NAME: "opensuse-15.1-amd64"
  <<: *docker_build

docker-opensuse-15.2-amd64:
  variables:
    IMG_NAME: "opensuse-15.2-amd64"
  <<: *docker_build

docker-opensuse-15.3-amd64:
  variables:
    IMG_NAME: "opensuse-15.3-amd64"
  <<: *docker_build

docker-opensuse-15.4-amd64:
  variables:
    IMG_NAME: "opensuse-15.4-amd64"
  <<: *docker_build

docker-opensuse-15.5-amd64:
  variables:
    IMG_NAME: "opensuse-15.5-amd64"
  <<: *docker_build

docker-ubuntu-18_04-amd64:
  variables:
    IMG_NAME: "ubuntu-18.04-amd64"
  <<: *docker_build

docker-ubuntu-20_04-amd64:
  variables:
    IMG_NAME: "ubuntu-20.04-amd64"
  <<: *docker_build

docker-ubuntu-22_04-amd64:
  variables:
    IMG_NAME: "ubuntu-22.04-amd64"
  <<: *docker_build

docker-ubuntu-24_04-amd64:
  variables:
    IMG_NAME: "ubuntu-24.04-amd64"
  <<: *docker_build

docker-ubuntu-24_10-amd64:
  variables:
    IMG_NAME: "ubuntu-24.10-amd64"
  <<: *docker_build

## Build stage
#
# Now we compile and run unit tests ... in every single distribution.
# Every task needs its docker, see above.

.build: &build-base
  stage: build
  script:
  - autoreconf
  - ./configure CPPFLAGS="$CPPFLAGS" LDFLAGS="$LDFLAGS" $CONFIGURE_OPTIONS
  # Detect which make is available
  - MAKE=make
  - which gmake 2>/dev/null >/dev/null && MAKE=gmake
  - BRANCH=$CI_COMMIT_BRANCH $MAKE
  - $MAKE check
  # Build docs when tools are available
  - if which linuxdoc pdflatex sgmlsasp >/dev/null ; then $MAKE docs ; fi

# A special task for preparing the release archives
build-release:
  image: registry.nic.cz/labs/bird:docbuilder
  stage: build
  tags:
    - docker
    - linux
  script:
    - autoreconf
    - ./configure --with-protocols= --disable-client
    - make obj/doc/bird-singlepage.html
    - BRANCH=$CI_COMMIT_BRANCH tools/make-archive
  artifacts:
    paths:
      - obj/doc/bird-singlepage.html
      - bird-*.tar.gz
    expire_in: 1 day

.build-linux: &build-linux
  <<: *build-base
  tags:
    - docker
    - linux
    - amd64

build-centos-7-amd64:
  <<: *build-linux
  variables:
    # export path to devtoolset-8-gcc
    CC: /opt/rh/devtoolset-8/root/usr/bin/gcc
    LC_ALL: en_US.UTF-8
  image: registry.nic.cz/labs/bird:centos-7-amd64

build-centos-8-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:centos-8-amd64

build-debian-10-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-10-amd64

build-debian-10-i386:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-10-i386

build-debian-11-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-11-amd64

build-debian-11-i386:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-11-i386

build-debian-12-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-12-amd64

build-debian-12-i386:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-12-i386

build-debian-testing-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-testing-amd64

build-debian-testing-i386:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-testing-i386

build-fedora-32-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-32-amd64

build-fedora-33-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-33-amd64

build-fedora-34-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-34-amd64

build-fedora-35-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-35-amd64

build-fedora-36-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-36-amd64

build-fedora-37-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-37-amd64

build-fedora-38-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-38-amd64

build-fedora-39-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-39-amd64

build-fedora-40-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-40-amd64

build-fedora-41-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:fedora-41-amd64

#planned release 4/2025
# build-fedora-42-amd64:
#   <<: *build-linux
#   image: registry.nic.cz/labs/bird:fedora-42-amd64

build-opensuse-15.0-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.0-amd64

build-opensuse-15.1-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.1-amd64

build-opensuse-15.2-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.2-amd64

build-opensuse-15.3-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.3-amd64

build-opensuse-15.4-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.4-amd64

build-opensuse-15.5-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:opensuse-15.5-amd64

build-ubuntu-18_04-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:ubuntu-18.04-amd64

build-ubuntu-20_04-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:ubuntu-20.04-amd64

build-ubuntu-22_04-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:ubuntu-22.04-amd64

build-ubuntu-24_04-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:ubuntu-24.04-amd64

build-ubuntu-24_10-amd64:
  <<: *build-linux
  image: registry.nic.cz/labs/bird:ubuntu-24.10-amd64

# Testing builds for just a single protocol each time

.build-only: &build-only
  <<: *build-linux
  image: registry.nic.cz/labs/bird:debian-12-amd64

build-only-aggregator:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=aggregator

build-only-babel:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=babel

build-only-bfd:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=bfd

build-only-bgp:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=bgp

build-only-bgp-bmp:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=bgp,bmp

build-only-l3vpn:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=l3vpn

build-only-mrt:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=mrt

build-only-ospf:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=ospf

build-only-pipe:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=pipe

build-only-radv:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=radv

build-only-rip:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=rip

build-only-rpki:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=rpki

build-only-static:
  <<: *build-only
  variables:
    CONFIGURE_OPTIONS: --with-protocols=static

# Packaging rules
# As we support some ancient versions of different distributions,
# we need to keep several different machineries. It's not so bad
# but it's bad nevertheless.
#
# We do NOT build separate documentation packages in these rules.

.pkg-deb: &pkg-deb
  stage: pkg
  script:
    # create venv only if it's installed
    - if python3 -m venv venv; then . venv/bin/activate; fi
    - pip3 install apkg
    - BRANCH=$CI_COMMIT_BRANCH ARCHIVE_DOCS=false apkg build
    #- apkg install -y pkg/pkgs/*/*/*.deb
  artifacts:
    paths:
      - pkg/pkgs/*

.pkg-deb-legacy: &pkg-deb-legacy
  stage: pkg
  script:
    # create venv only if it's installed
    - if python3 -m venv venv; then . venv/bin/activate; fi
    # install older version of bs4 that does not use python version >= 3.6
    # apkg depends on bs4, and unless we want to backport python 3.6
    # to ancient distros, we need to do this workaround
    - pip3 install beautifulsoup4==4.11.2
    - pip3 install apkg
    - BRANCH=$CI_COMMIT_BRANCH ARCHIVE_DOCS=false apkg build
    #- apkg install -y pkg/pkgs/*/*/*.deb
  artifacts:
    paths:
      - pkg/pkgs/*

.pkg-rpm: &pkg-rpm
  stage: pkg
  script:
    - pip3 install apkg
    - BRANCH=$CI_COMMIT_BRANCH ARCHIVE_DOCS=false apkg build
    #- apkg install -y pkg/pkgs/*/*/*.rpm
  artifacts:
    paths:
      - pkg/pkgs/*

.pkg-rpm-wa: &pkg-rpm-wa
  stage: pkg
  script:
    - sed -i "s/runstatedir/with-runtimedir/" distro/pkg/rpm/bird.spec
    # install older version of bs4 that does not use python version >= 3.6
    - pip3 install beautifulsoup4==4.11.2
    - pip3 install apkg
    - BRANCH=$CI_COMMIT_BRANCH ARCHIVE_DOCS=false apkg build
    #- apkg install -y pkg/pkgs/*/*/*.rpm
  artifacts:
    paths:
      - pkg/pkgs/*

pkg-centos-7-amd64:
  <<: *pkg-rpm-wa
  variables:
    # export path to devtoolset-8-gcc
    CC: /opt/rh/devtoolset-8/root/usr/bin/gcc
    LC_ALL: en_US.UTF-8
  needs: [build-centos-7-amd64]
  image: registry.nic.cz/labs/bird:centos-7-amd64

pkg-centos-8-amd64:
  <<: *pkg-rpm-wa
  needs: [build-centos-8-amd64]
  image: registry.nic.cz/labs/bird:centos-8-amd64

pkg-debian-10-amd64:
  <<: *pkg-deb
  needs: [build-debian-10-amd64]
  image: registry.nic.cz/labs/bird:debian-10-amd64

pkg-debian-10-i386:
  <<: *pkg-deb
  needs: [build-debian-10-i386]
  image: registry.nic.cz/labs/bird:debian-10-i386

pkg-debian-11-amd64:
  <<: *pkg-deb
  needs: [build-debian-11-amd64]
  image: registry.nic.cz/labs/bird:debian-11-amd64

pkg-debian-11-i386:
  <<: *pkg-deb
  needs: [build-debian-11-i386]
  image: registry.nic.cz/labs/bird:debian-11-i386

pkg-debian-12-amd64:
  <<: *pkg-deb
  needs: [build-debian-12-amd64]
  image: registry.nic.cz/labs/bird:debian-12-amd64

pkg-debian-12-i386:
  <<: *pkg-deb
  needs: [build-debian-12-i386]
  image: registry.nic.cz/labs/bird:debian-12-i386

pkg-debian-testing-amd64:
  <<: *pkg-deb
  needs: [build-debian-testing-amd64]
  image: registry.nic.cz/labs/bird:debian-testing-amd64

pkg-debian-testing-i386:
  <<: *pkg-deb
  needs: [build-debian-testing-i386]
  image: registry.nic.cz/labs/bird:debian-testing-i386

pkg-fedora-32-amd64:
  <<: *pkg-rpm-wa
  needs: [build-fedora-32-amd64]
  image: registry.nic.cz/labs/bird:fedora-32-amd64

pkg-fedora-33-amd64:
  <<: *pkg-rpm-wa
  needs: [build-fedora-33-amd64]
  image: registry.nic.cz/labs/bird:fedora-33-amd64

pkg-fedora-34-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-34-amd64]
  image: registry.nic.cz/labs/bird:fedora-34-amd64

pkg-fedora-35-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-35-amd64]
  image: registry.nic.cz/labs/bird:fedora-35-amd64

pkg-fedora-36-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-36-amd64]
  image: registry.nic.cz/labs/bird:fedora-36-amd64

pkg-fedora-37-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-37-amd64]
  image: registry.nic.cz/labs/bird:fedora-37-amd64

pkg-fedora-38-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-38-amd64]
  image: registry.nic.cz/labs/bird:fedora-38-amd64

pkg-fedora-39-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-39-amd64]
  image: registry.nic.cz/labs/bird:fedora-39-amd64

pkg-fedora-40-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-40-amd64]
  image: registry.nic.cz/labs/bird:fedora-40-amd64

pkg-fedora-41-amd64:
  <<: *pkg-rpm
  needs: [build-fedora-41-amd64]
  image: registry.nic.cz/labs/bird:fedora-41-amd64

#planned release 4/2025
# pkg-fedora-42-amd64:
#   <<: *pkg-rpm
#   needs: [build-fedora-42-amd64]
#   image: registry.nic.cz/labs/bird:fedora-42-amd64

pkg-opensuse-15.0-amd64:
 <<: *pkg-rpm-wa
 needs: [build-opensuse-15.0-amd64]
 image: registry.nic.cz/labs/bird:opensuse-15.0-amd64

pkg-opensuse-15.1-amd64:
 <<: *pkg-rpm-wa
 needs: [build-opensuse-15.1-amd64]
 image: registry.nic.cz/labs/bird:opensuse-15.1-amd64

pkg-opensuse-15.2-amd64:
 <<: *pkg-rpm-wa
 needs: [build-opensuse-15.2-amd64]
 image: registry.nic.cz/labs/bird:opensuse-15.2-amd64

pkg-opensuse-15.3-amd64:
  <<: *pkg-rpm-wa
  needs: [build-opensuse-15.3-amd64]
  image: registry.nic.cz/labs/bird:opensuse-15.3-amd64

pkg-opensuse-15.4-amd64:
  <<: *pkg-rpm-wa
  needs: [build-opensuse-15.4-amd64]
  image: registry.nic.cz/labs/bird:opensuse-15.4-amd64

pkg-opensuse-15.5-amd64:
  <<: *pkg-rpm-wa
  needs: [build-opensuse-15.5-amd64]
  image: registry.nic.cz/labs/bird:opensuse-15.5-amd64

pkg-ubuntu-18.04-amd64:
  <<: *pkg-deb-legacy
  needs: [build-ubuntu-18_04-amd64]
  image: registry.nic.cz/labs/bird:ubuntu-18.04-amd64

pkg-ubuntu-20.04-amd64:
  <<: *pkg-deb
  needs: [build-ubuntu-20_04-amd64]
  image: registry.nic.cz/labs/bird:ubuntu-20.04-amd64

pkg-ubuntu-22.04-amd64:
  <<: *pkg-deb
  needs: [build-ubuntu-22_04-amd64]
  image: registry.nic.cz/labs/bird:ubuntu-22.04-amd64

pkg-ubuntu-24.04-amd64:
  <<: *pkg-deb
  needs: [build-ubuntu-24_04-amd64]
  image: registry.nic.cz/labs/bird:ubuntu-24.04-amd64

pkg-ubuntu-24.10-amd64:
  <<: *pkg-deb
  needs: [build-ubuntu-24_10-amd64]
  image: registry.nic.cz/labs/bird:ubuntu-24.10-amd64

build-netlab:
  stage: build
  tags:
    - netlab
    - amd64
  script:
    - DIR=$(pwd)
    - autoreconf
    - ./configure
    - BRANCH=$CI_COMMIT_BRANCH make
    - cd $TOOLS_DIR
    - sudo git clean -fx
    - git pull --ff-only
    - mv $DIR/bird $DIR/birdc netlab/common
    - ln -s $STAYRTR_BINARY netlab/common/stayrtr

.test: &test-base
  stage: test
  needs: [build-netlab]
  tags:
    - netlab
    - amd64
  script:
    - cd $TOOLS_DIR/netlab
    - sudo ./stop
    - sudo ./runtest -s v2 -m check $TEST_NAME

test-ospf-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-base

test-ospf-default:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-default

test-ospf-priority:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-priority

test-ospf-nbma:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-nbma

test-ospf-ptmp:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-ptmp

test-ospf-authentication:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-authentication

test-ospf-bfd:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-bfd

test-ospf-custom:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-custom

test-ospf-area:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-area

test-ospf-vrf:
  <<: *test-base
  variables:
    TEST_NAME: cf-ospf-vrf

test-bgp-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-base

test-bgp-auth:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-auth

test-bgp-int:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-int

test-bgp-merged:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-merged

test-bgp-flowspec:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-flowspec

test-bgp-rs-multitab:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-rs-multitab

test-bgp-rs-singletab:
  <<: *test-base
  variables:
    TEST_NAME: cf-bgp-rs-singletab

test-ebgp-loop:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-loop

test-ebgp-star:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-star

test-ebgp-role:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-role

test-ebgp-graceful:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-graceful

test-ebgp-import-limit:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-import-limit

test-ebgp-hostname:
  <<: *test-base
  variables:
    TEST_NAME: cf-ebgp-hostname

test-ibgp-loop:
  <<: *test-base
  variables:
    TEST_NAME: cf-ibgp-loop

test-ibgp-loop-big:
  <<: *test-base
  variables:
    TEST_NAME: cf-ibgp-loop-big

test-ibgp-flat:
  <<: *test-base
  variables:
    TEST_NAME: cf-ibgp-flat

test-babel-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-babel-base

test-babel-auth:
  <<: *test-base
  variables:
    TEST_NAME: cf-babel-auth

test-rip-base:
  <<: *test-base
  variables:
    TEST_NAME: cf-rip-base

test-kernel-learn:
  <<: *test-base
  variables:
    TEST_NAME: cf-kernel-learn

test-mpls-bgp:
  <<: *test-base
  variables:
    TEST_NAME: cf-mpls-bgp

test-mpls-bgp-l3vpn:
  <<: *test-base
  variables:
    TEST_NAME: cf-mpls-bgp-l3vpn


.build-birdlab-base: &build-birdlab-base
  stage: build
  script:
    - autoreconf
    - ./configure
    - gmake
    - gmake check

# There is no docker for BSD's, these are proper virtuals in QEMU.
build-birdlab-freebsd-13:
  <<: *build-birdlab-base
  tags:
    - birdlab-freebsd-13
    - amd64

build-birdlab-openbsd-71:
  <<: *build-birdlab-base
  variables:
     AUTOCONF_VERSION: "2.71"
  tags:
    - birdlab-openbsd-71
    - amd64

# We have also some virtuals for these but there are working dockers as well
# so no need to bother again
#build-birdlab-debian-11:
#  <<: *build-birdlab-base
#  tags:
#    - birdlab-debian-11
#    - amd64
#
#build-birdlab-centos-08:
#  <<: *build-birdlab-base
#  tags:
#    - birdlab-centos-08
#    - amd64
#
#build-birdlab-fedora-37:
#  <<: *build-birdlab-base
#  tags:
#    - birdlab-fedora-37
#    - amd64

# Release confirmation job for tag pushing. As soon as we finish our web
# deployment automatic machinery, clicking the button is expected to
# publish the release info on our website.
#
# We are not there yet tho, too many other fish to fry.

publish-release:
  stage: release
  script:
  - "true"
  rules:
  - if: '$CI_COMMIT_TAG'
    when: manual
  - when: never
